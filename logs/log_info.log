
[INFO] [2018-08-10 15:28:39.856]-[main] [org.springframework.context.annotation.AnnotationConfigApplicationContext]
==> Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@75b25825: startup date [Fri Aug 10 15:28:39 CST 2018]; root of context hierarchy

[INFO] [2018-08-10 15:28:39.989]-[background-preinit] [org.hibernate.validator.internal.util.Version]
==> HV000001: Hibernate Validator 5.3.6.Final

[DEBUG] [2018-08-10 15:28:40.139]-[background-preinit] [org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver]
==> Cannot find javax.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.

[INFO] [2018-08-10 15:28:41.210]-[main] [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor]
==> JSR-330 'javax.inject.Inject' annotation found and supported for autowiring

[INFO] [2018-08-10 15:28:41.306]-[main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker]
==> Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$ff3a91c4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)

[DEBUG] [2018-08-10 15:28:41.414]-[main] [org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver]
==> Cannot find javax.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.

[DEBUG] [2018-08-10 15:28:41.490]-[main] [org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver]
==> Cannot find javax.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.

[DEBUG] [2018-08-10 15:28:41.511]-[main] [org.hibernate.validator.internal.engine.ConfigurationImpl]
==> Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator

[DEBUG] [2018-08-10 15:28:41.525]-[main] [org.hibernate.validator.internal.engine.ConfigurationImpl]
==> Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory

[DEBUG] [2018-08-10 15:28:41.529]-[main] [org.hibernate.validator.internal.engine.ConfigurationImpl]
==> Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy44

[DEBUG] [2018-08-10 15:28:41.536]-[main] [org.hibernate.validator.internal.xml.ValidationXmlParser]
==> Trying to load META-INF/validation.xml for XML based Validator configuration.

[DEBUG] [2018-08-10 15:28:41.544]-[main] [org.hibernate.validator.internal.xml.ResourceLoaderHelper]
==> Trying to load META-INF/validation.xml via user class loader

[DEBUG] [2018-08-10 15:28:41.551]-[main] [org.hibernate.validator.internal.xml.ResourceLoaderHelper]
==> Trying to load META-INF/validation.xml via TCCL

[DEBUG] [2018-08-10 15:28:41.552]-[main] [org.hibernate.validator.internal.xml.ResourceLoaderHelper]
==> Trying to load META-INF/validation.xml via Hibernate Validator's class loader

[DEBUG] [2018-08-10 15:28:41.553]-[main] [org.hibernate.validator.internal.xml.ValidationXmlParser]
==> No META-INF/validation.xml found. Using annotation based configuration only.

[WARN] [2018-08-10 15:28:41.926]-[main] [org.springframework.context.annotation.AnnotationConfigApplicationContext]
==> Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'discoveryClientConfigServiceBootstrapConfiguration': Unsatisfied dependency expressed through field 'instanceProvider'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'configServerInstanceProvider' defined in org.springframework.cloud.config.client.DiscoveryClientConfigServiceBootstrapConfiguration: Unsatisfied dependency expressed through method 'configServerInstanceProvider' parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'discoveryClient' defined in org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration: Unsatisfied dependency expressed through method 'discoveryClient' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'eurekaInstanceConfigBean' defined in org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.cloud.netflix.eureka.EurekaInstanceConfigBean]: Factory method 'eurekaInstanceConfigBean' threw exception; nested exception is java.lang.IllegalArgumentException: Could not resolve placeholder 'HOSTNAME' in value "${HOSTNAME}"

[INFO] [2018-08-10 15:28:41.932]-[main] [org.springframework.boot.autoconfigure.logging.AutoConfigurationReportLoggingInitializer]
==> 

Error starting ApplicationContext. To display the auto-configuration report re-run your application with 'debug' enabled.

[ERROR] [2018-08-10 15:28:41.943]-[main] [org.springframework.boot.SpringApplication]
==> Application startup failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'discoveryClientConfigServiceBootstrapConfiguration': Unsatisfied dependency expressed through field 'instanceProvider'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'configServerInstanceProvider' defined in org.springframework.cloud.config.client.DiscoveryClientConfigServiceBootstrapConfiguration: Unsatisfied dependency expressed through method 'configServerInstanceProvider' parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'discoveryClient' defined in org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration: Unsatisfied dependency expressed through method 'discoveryClient' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'eurekaInstanceConfigBean' defined in org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.cloud.netflix.eureka.EurekaInstanceConfigBean]: Factory method 'eurekaInstanceConfigBean' threw exception; nested exception is java.lang.IllegalArgumentException: Could not resolve placeholder 'HOSTNAME' in value "${HOSTNAME}"
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:588)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:88)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1272)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:553)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:312)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:308)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:761)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:867)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:543)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:693)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:360)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:303)
	at org.springframework.boot.builder.SpringApplicationBuilder.run(SpringApplicationBuilder.java:134)
	at org.springframework.cloud.bootstrap.BootstrapApplicationListener.bootstrapServiceContext(BootstrapApplicationListener.java:175)
	at org.springframework.cloud.bootstrap.BootstrapApplicationListener.onApplicationEvent(BootstrapApplicationListener.java:98)
	at org.springframework.cloud.bootstrap.BootstrapApplicationListener.onApplicationEvent(BootstrapApplicationListener.java:64)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:122)
	at org.springframework.boot.context.event.EventPublishingRunListener.environmentPrepared(EventPublishingRunListener.java:74)
	at org.springframework.boot.SpringApplicationRunListeners.environmentPrepared(SpringApplicationRunListeners.java:54)
	at org.springframework.boot.SpringApplication.prepareEnvironment(SpringApplication.java:325)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:296)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1118)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1107)
	at com.dreawer.appxauth.AppxAuthApplication.main(AppxAuthApplication.java:23)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'configServerInstanceProvider' defined in org.springframework.cloud.config.client.DiscoveryClientConfigServiceBootstrapConfiguration: Unsatisfied dependency expressed through method 'configServerInstanceProvider' parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'discoveryClient' defined in org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration: Unsatisfied dependency expressed through method 'discoveryClient' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'eurekaInstanceConfigBean' defined in org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.cloud.netflix.eureka.EurekaInstanceConfigBean]: Factory method 'eurekaInstanceConfigBean' threw exception; nested exception is java.lang.IllegalArgumentException: Could not resolve placeholder 'HOSTNAME' in value "${HOSTNAME}"
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:749)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:467)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1181)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1075)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:513)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:312)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:308)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1066)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:585)
	... 30 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'discoveryClient' defined in org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration: Unsatisfied dependency expressed through method 'discoveryClient' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'eurekaInstanceConfigBean' defined in org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.cloud.netflix.eureka.EurekaInstanceConfigBean]: Factory method 'eurekaInstanceConfigBean' threw exception; nested exception is java.lang.IllegalArgumentException: Could not resolve placeholder 'HOSTNAME' in value "${HOSTNAME}"
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:749)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:467)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1181)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1075)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:513)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:312)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:308)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1066)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:835)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:741)
	... 43 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'eurekaInstanceConfigBean' defined in org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.cloud.netflix.eureka.EurekaInstanceConfigBean]: Factory method 'eurekaInstanceConfigBean' threw exception; nested exception is java.lang.IllegalArgumentException: Could not resolve placeholder 'HOSTNAME' in value "${HOSTNAME}"
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1181)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1075)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:513)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:312)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:308)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1066)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:835)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:741)
	... 57 common frames omitted
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.cloud.netflix.eureka.EurekaInstanceConfigBean]: Factory method 'eurekaInstanceConfigBean' threw exception; nested exception is java.lang.IllegalArgumentException: Could not resolve placeholder 'HOSTNAME' in value "${HOSTNAME}"
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:189)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:588)
	... 70 common frames omitted
Caused by: java.lang.IllegalArgumentException: Could not resolve placeholder 'HOSTNAME' in value "${HOSTNAME}"
	at org.springframework.util.PropertyPlaceholderHelper.parseStringValue(PropertyPlaceholderHelper.java:174)
	at org.springframework.util.PropertyPlaceholderHelper.replacePlaceholders(PropertyPlaceholderHelper.java:126)
	at org.springframework.core.env.AbstractPropertyResolver.doResolvePlaceholders(AbstractPropertyResolver.java:236)
	at org.springframework.core.env.AbstractPropertyResolver.resolveRequiredPlaceholders(AbstractPropertyResolver.java:210)
	at org.springframework.core.env.AbstractPropertyResolver.resolveNestedPlaceholders(AbstractPropertyResolver.java:227)
	at org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(PropertySourcesPropertyResolver.java:84)
	at org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(PropertySourcesPropertyResolver.java:66)
	at org.springframework.core.env.AbstractEnvironment.getProperty(AbstractEnvironment.java:537)
	at org.springframework.boot.bind.RelaxedPropertyResolver.getProperty(RelaxedPropertyResolver.java:84)
	at org.springframework.boot.bind.RelaxedPropertyResolver.getProperty(RelaxedPropertyResolver.java:64)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration.eurekaInstanceConfigBean(EurekaClientAutoConfiguration.java:119)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$$EnhancerBySpringCGLIB$$9515da96.CGLIB$eurekaInstanceConfigBean$2(<generated>)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$$EnhancerBySpringCGLIB$$9515da96$$FastClassBySpringCGLIB$$686602e9.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:358)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$$EnhancerBySpringCGLIB$$9515da96.eurekaInstanceConfigBean(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:162)
	... 71 common frames omitted

[ERROR] [2018-08-10 15:28:41.946]-[main] [org.springframework.boot.SpringApplication]
==> Application startup failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'discoveryClientConfigServiceBootstrapConfiguration': Unsatisfied dependency expressed through field 'instanceProvider'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'configServerInstanceProvider' defined in org.springframework.cloud.config.client.DiscoveryClientConfigServiceBootstrapConfiguration: Unsatisfied dependency expressed through method 'configServerInstanceProvider' parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'discoveryClient' defined in org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration: Unsatisfied dependency expressed through method 'discoveryClient' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'eurekaInstanceConfigBean' defined in org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.cloud.netflix.eureka.EurekaInstanceConfigBean]: Factory method 'eurekaInstanceConfigBean' threw exception; nested exception is java.lang.IllegalArgumentException: Could not resolve placeholder 'HOSTNAME' in value "${HOSTNAME}"
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:588)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:88)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1272)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:553)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:312)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:308)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:761)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:867)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:543)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:693)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:360)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:303)
	at org.springframework.boot.builder.SpringApplicationBuilder.run(SpringApplicationBuilder.java:134)
	at org.springframework.cloud.bootstrap.BootstrapApplicationListener.bootstrapServiceContext(BootstrapApplicationListener.java:175)
	at org.springframework.cloud.bootstrap.BootstrapApplicationListener.onApplicationEvent(BootstrapApplicationListener.java:98)
	at org.springframework.cloud.bootstrap.BootstrapApplicationListener.onApplicationEvent(BootstrapApplicationListener.java:64)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:122)
	at org.springframework.boot.context.event.EventPublishingRunListener.environmentPrepared(EventPublishingRunListener.java:74)
	at org.springframework.boot.SpringApplicationRunListeners.environmentPrepared(SpringApplicationRunListeners.java:54)
	at org.springframework.boot.SpringApplication.prepareEnvironment(SpringApplication.java:325)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:296)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1118)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1107)
	at com.dreawer.appxauth.AppxAuthApplication.main(AppxAuthApplication.java:23)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'configServerInstanceProvider' defined in org.springframework.cloud.config.client.DiscoveryClientConfigServiceBootstrapConfiguration: Unsatisfied dependency expressed through method 'configServerInstanceProvider' parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'discoveryClient' defined in org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration: Unsatisfied dependency expressed through method 'discoveryClient' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'eurekaInstanceConfigBean' defined in org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.cloud.netflix.eureka.EurekaInstanceConfigBean]: Factory method 'eurekaInstanceConfigBean' threw exception; nested exception is java.lang.IllegalArgumentException: Could not resolve placeholder 'HOSTNAME' in value "${HOSTNAME}"
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:749)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:467)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1181)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1075)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:513)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:312)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:308)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1066)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:585)
	... 30 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'discoveryClient' defined in org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration: Unsatisfied dependency expressed through method 'discoveryClient' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'eurekaInstanceConfigBean' defined in org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.cloud.netflix.eureka.EurekaInstanceConfigBean]: Factory method 'eurekaInstanceConfigBean' threw exception; nested exception is java.lang.IllegalArgumentException: Could not resolve placeholder 'HOSTNAME' in value "${HOSTNAME}"
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:749)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:467)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1181)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1075)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:513)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:312)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:308)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1066)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:835)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:741)
	... 43 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'eurekaInstanceConfigBean' defined in org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.cloud.netflix.eureka.EurekaInstanceConfigBean]: Factory method 'eurekaInstanceConfigBean' threw exception; nested exception is java.lang.IllegalArgumentException: Could not resolve placeholder 'HOSTNAME' in value "${HOSTNAME}"
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1181)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1075)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:513)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:312)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:308)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1066)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:835)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:741)
	... 57 common frames omitted
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.cloud.netflix.eureka.EurekaInstanceConfigBean]: Factory method 'eurekaInstanceConfigBean' threw exception; nested exception is java.lang.IllegalArgumentException: Could not resolve placeholder 'HOSTNAME' in value "${HOSTNAME}"
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:189)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:588)
	... 70 common frames omitted
Caused by: java.lang.IllegalArgumentException: Could not resolve placeholder 'HOSTNAME' in value "${HOSTNAME}"
	at org.springframework.util.PropertyPlaceholderHelper.parseStringValue(PropertyPlaceholderHelper.java:174)
	at org.springframework.util.PropertyPlaceholderHelper.replacePlaceholders(PropertyPlaceholderHelper.java:126)
	at org.springframework.core.env.AbstractPropertyResolver.doResolvePlaceholders(AbstractPropertyResolver.java:236)
	at org.springframework.core.env.AbstractPropertyResolver.resolveRequiredPlaceholders(AbstractPropertyResolver.java:210)
	at org.springframework.core.env.AbstractPropertyResolver.resolveNestedPlaceholders(AbstractPropertyResolver.java:227)
	at org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(PropertySourcesPropertyResolver.java:84)
	at org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(PropertySourcesPropertyResolver.java:66)
	at org.springframework.core.env.AbstractEnvironment.getProperty(AbstractEnvironment.java:537)
	at org.springframework.boot.bind.RelaxedPropertyResolver.getProperty(RelaxedPropertyResolver.java:84)
	at org.springframework.boot.bind.RelaxedPropertyResolver.getProperty(RelaxedPropertyResolver.java:64)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration.eurekaInstanceConfigBean(EurekaClientAutoConfiguration.java:119)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$$EnhancerBySpringCGLIB$$9515da96.CGLIB$eurekaInstanceConfigBean$2(<generated>)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$$EnhancerBySpringCGLIB$$9515da96$$FastClassBySpringCGLIB$$686602e9.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:358)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$$EnhancerBySpringCGLIB$$9515da96.eurekaInstanceConfigBean(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:162)
	... 71 common frames omitted

[INFO] [2018-08-10 15:29:12.081]-[main] [org.springframework.context.annotation.AnnotationConfigApplicationContext]
==> Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@549949be: startup date [Fri Aug 10 15:29:12 CST 2018]; root of context hierarchy

[INFO] [2018-08-10 15:29:12.242]-[background-preinit] [org.hibernate.validator.internal.util.Version]
==> HV000001: Hibernate Validator 5.3.6.Final

[DEBUG] [2018-08-10 15:29:12.319]-[background-preinit] [org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver]
==> Cannot find javax.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.

[INFO] [2018-08-10 15:29:12.676]-[main] [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor]
==> JSR-330 'javax.inject.Inject' annotation found and supported for autowiring

[INFO] [2018-08-10 15:29:12.734]-[main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker]
==> Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$a50da44a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)

[DEBUG] [2018-08-10 15:29:12.808]-[main] [org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver]
==> Cannot find javax.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.

[DEBUG] [2018-08-10 15:29:12.819]-[main] [org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver]
==> Cannot find javax.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.

[DEBUG] [2018-08-10 15:29:12.825]-[main] [org.hibernate.validator.internal.engine.ConfigurationImpl]
==> Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator

[DEBUG] [2018-08-10 15:29:12.825]-[main] [org.hibernate.validator.internal.engine.ConfigurationImpl]
==> Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory

[DEBUG] [2018-08-10 15:29:12.826]-[main] [org.hibernate.validator.internal.engine.ConfigurationImpl]
==> Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy35

[DEBUG] [2018-08-10 15:29:12.829]-[main] [org.hibernate.validator.internal.xml.ValidationXmlParser]
==> Trying to load META-INF/validation.xml for XML based Validator configuration.

[DEBUG] [2018-08-10 15:29:12.830]-[main] [org.hibernate.validator.internal.xml.ResourceLoaderHelper]
==> Trying to load META-INF/validation.xml via user class loader

[DEBUG] [2018-08-10 15:29:12.832]-[main] [org.hibernate.validator.internal.xml.ResourceLoaderHelper]
==> Trying to load META-INF/validation.xml via TCCL

[DEBUG] [2018-08-10 15:29:12.833]-[main] [org.hibernate.validator.internal.xml.ResourceLoaderHelper]
==> Trying to load META-INF/validation.xml via Hibernate Validator's class loader

[DEBUG] [2018-08-10 15:29:12.834]-[main] [org.hibernate.validator.internal.xml.ValidationXmlParser]
==> No META-INF/validation.xml found. Using annotation based configuration only.

[WARN] [2018-08-10 15:29:13.530]-[main] [org.springframework.cloud.config.client.ConfigServicePropertySourceLocator]
==> Could not locate PropertySource: I/O error on GET request for "http://localhost:8888/application/default": 拒绝连接 (Connection refused); nested exception is java.net.ConnectException: 拒绝连接 (Connection refused)

[INFO] [2018-08-10 15:29:13.532]-[main] [com.dreawer.appxauth.AppxAuthApplication]
==> The following profiles are active: local

[WARN] [2018-08-10 15:29:15.262]-[main] [org.mybatis.spring.mapper.ClassPathMapperScanner]
==> No MyBatis mapper was found in '[com.dreawer.appxauth.persistence]' package. Please check your configuration.

[WARN] [2018-08-10 15:29:15.605]-[main] [org.mybatis.spring.mapper.ClassPathMapperScanner]
==> No MyBatis mapper was found in '[com.dreawer.appxauth]' package. Please check your configuration.

[DEBUG] [2018-08-10 15:29:17.360]-[main] [org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver]
==> Cannot find javax.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.

[DEBUG] [2018-08-10 15:29:17.363]-[main] [org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver]
==> Cannot find javax.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.

[DEBUG] [2018-08-10 15:29:17.364]-[main] [org.hibernate.validator.internal.engine.ConfigurationImpl]
==> Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator

[DEBUG] [2018-08-10 15:29:17.365]-[main] [org.hibernate.validator.internal.engine.ConfigurationImpl]
==> Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory

[DEBUG] [2018-08-10 15:29:17.365]-[main] [org.hibernate.validator.internal.engine.ConfigurationImpl]
==> Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy35

[DEBUG] [2018-08-10 15:29:17.366]-[main] [org.hibernate.validator.internal.xml.ValidationXmlParser]
==> Trying to load META-INF/validation.xml for XML based Validator configuration.

[DEBUG] [2018-08-10 15:29:17.366]-[main] [org.hibernate.validator.internal.xml.ResourceLoaderHelper]
==> Trying to load META-INF/validation.xml via user class loader

[DEBUG] [2018-08-10 15:29:17.366]-[main] [org.hibernate.validator.internal.xml.ResourceLoaderHelper]
==> Trying to load META-INF/validation.xml via TCCL

[DEBUG] [2018-08-10 15:29:17.367]-[main] [org.hibernate.validator.internal.xml.ResourceLoaderHelper]
==> Trying to load META-INF/validation.xml via Hibernate Validator's class loader

[DEBUG] [2018-08-10 15:29:17.368]-[main] [org.hibernate.validator.internal.xml.ValidationXmlParser]
==> No META-INF/validation.xml found. Using annotation based configuration only.

[INFO] [2018-08-10 15:29:18.012]-[main] [org.apache.coyote.http11.Http11NioProtocol]
==> Initializing ProtocolHandler ["http-nio-10120"]

[INFO] [2018-08-10 15:29:18.041]-[main] [org.apache.catalina.core.StandardService]
==> Starting service [Tomcat]

[INFO] [2018-08-10 15:29:18.042]-[main] [org.apache.catalina.core.StandardEngine]
==> Starting Servlet Engine: Apache Tomcat/8.5.31

[INFO] [2018-08-10 15:29:18.226]-[localhost-startStop-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]]
==> Initializing Spring embedded WebApplicationContext

[WARN] [2018-08-10 15:29:19.941]-[main] [org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext]
==> Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'authController': Unsatisfied dependency expressed through field 'authService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'authService': Unsatisfied dependency expressed through field 'authDao'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'authDao': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [/home/fenrir/eclipse-workspace/Persional/appx-auth/target/classes/com/dreawer/appxauth/persistence/UserCaseDao.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. The XML location is 'file [/home/fenrir/eclipse-workspace/Persional/appx-auth/target/classes/com/dreawer/appxauth/persistence/UserCaseDao.xml]'. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'CountByUserIdResultMap'.  Cause: java.lang.ClassNotFoundException: Cannot find class: CountByUserIdResultMap

[INFO] [2018-08-10 15:29:19.942]-[main] [org.apache.catalina.core.StandardService]
==> Stopping service [Tomcat]

[ERROR] [2018-08-10 15:29:20.114]-[main] [org.springframework.boot.SpringApplication]
==> Application startup failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'authController': Unsatisfied dependency expressed through field 'authService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'authService': Unsatisfied dependency expressed through field 'authDao'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'authDao': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [/home/fenrir/eclipse-workspace/Persional/appx-auth/target/classes/com/dreawer/appxauth/persistence/UserCaseDao.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. The XML location is 'file [/home/fenrir/eclipse-workspace/Persional/appx-auth/target/classes/com/dreawer/appxauth/persistence/UserCaseDao.xml]'. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'CountByUserIdResultMap'.  Cause: java.lang.ClassNotFoundException: Cannot find class: CountByUserIdResultMap
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:588)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:88)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1272)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:553)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:312)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:308)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:761)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:867)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:543)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:693)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:360)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:303)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1118)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1107)
	at com.dreawer.appxauth.AppxAuthApplication.main(AppxAuthApplication.java:23)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'authService': Unsatisfied dependency expressed through field 'authDao'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'authDao': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [/home/fenrir/eclipse-workspace/Persional/appx-auth/target/classes/com/dreawer/appxauth/persistence/UserCaseDao.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. The XML location is 'file [/home/fenrir/eclipse-workspace/Persional/appx-auth/target/classes/com/dreawer/appxauth/persistence/UserCaseDao.xml]'. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'CountByUserIdResultMap'.  Cause: java.lang.ClassNotFoundException: Cannot find class: CountByUserIdResultMap
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:588)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:88)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1272)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:553)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:312)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:308)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1066)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:585)
	... 19 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'authDao': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [/home/fenrir/eclipse-workspace/Persional/appx-auth/target/classes/com/dreawer/appxauth/persistence/UserCaseDao.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. The XML location is 'file [/home/fenrir/eclipse-workspace/Persional/appx-auth/target/classes/com/dreawer/appxauth/persistence/UserCaseDao.xml]'. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'CountByUserIdResultMap'.  Cause: java.lang.ClassNotFoundException: Cannot find class: CountByUserIdResultMap
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessPropertyValues(CommonAnnotationBeanPostProcessor.java:321)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1272)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:553)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:312)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:308)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1066)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:585)
	... 32 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [/home/fenrir/eclipse-workspace/Persional/appx-auth/target/classes/com/dreawer/appxauth/persistence/UserCaseDao.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. The XML location is 'file [/home/fenrir/eclipse-workspace/Persional/appx-auth/target/classes/com/dreawer/appxauth/persistence/UserCaseDao.xml]'. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'CountByUserIdResultMap'.  Cause: java.lang.ClassNotFoundException: Cannot find class: CountByUserIdResultMap
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1181)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1075)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:513)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:312)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:308)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.autowireResource(CommonAnnotationBeanPostProcessor.java:522)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.getResource(CommonAnnotationBeanPostProcessor.java:496)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor$ResourceElement.getResourceToInject(CommonAnnotationBeanPostProcessor.java:627)
	at org.springframework.beans.factory.annotation.InjectionMetadata$InjectedElement.inject(InjectionMetadata.java:178)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:88)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessPropertyValues(CommonAnnotationBeanPostProcessor.java:318)
	... 43 common frames omitted
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [/home/fenrir/eclipse-workspace/Persional/appx-auth/target/classes/com/dreawer/appxauth/persistence/UserCaseDao.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. The XML location is 'file [/home/fenrir/eclipse-workspace/Persional/appx-auth/target/classes/com/dreawer/appxauth/persistence/UserCaseDao.xml]'. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'CountByUserIdResultMap'.  Cause: java.lang.ClassNotFoundException: Cannot find class: CountByUserIdResultMap
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:189)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:588)
	... 57 common frames omitted
Caused by: org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [/home/fenrir/eclipse-workspace/Persional/appx-auth/target/classes/com/dreawer/appxauth/persistence/UserCaseDao.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. The XML location is 'file [/home/fenrir/eclipse-workspace/Persional/appx-auth/target/classes/com/dreawer/appxauth/persistence/UserCaseDao.xml]'. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'CountByUserIdResultMap'.  Cause: java.lang.ClassNotFoundException: Cannot find class: CountByUserIdResultMap
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:523)
	at org.mybatis.spring.SqlSessionFactoryBean.afterPropertiesSet(SqlSessionFactoryBean.java:380)
	at org.mybatis.spring.SqlSessionFactoryBean.getObject(SqlSessionFactoryBean.java:547)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration.sqlSessionFactory(MybatisAutoConfiguration.java:153)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$bbc7f27d.CGLIB$sqlSessionFactory$0(<generated>)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$bbc7f27d$$FastClassBySpringCGLIB$$7f67053b.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:358)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$bbc7f27d.sqlSessionFactory(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:162)
	... 58 common frames omitted
Caused by: org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. The XML location is 'file [/home/fenrir/eclipse-workspace/Persional/appx-auth/target/classes/com/dreawer/appxauth/persistence/UserCaseDao.xml]'. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'CountByUserIdResultMap'.  Cause: java.lang.ClassNotFoundException: Cannot find class: CountByUserIdResultMap
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.configurationElement(XMLMapperBuilder.java:120)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.parse(XMLMapperBuilder.java:92)
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:521)
	... 71 common frames omitted
Caused by: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'CountByUserIdResultMap'.  Cause: java.lang.ClassNotFoundException: Cannot find class: CountByUserIdResultMap
	at org.apache.ibatis.builder.BaseBuilder.resolveClass(BaseBuilder.java:118)
	at org.apache.ibatis.builder.xml.XMLStatementBuilder.parseStatementNode(XMLStatementBuilder.java:74)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.buildStatementFromContext(XMLMapperBuilder.java:135)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.buildStatementFromContext(XMLMapperBuilder.java:128)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.configurationElement(XMLMapperBuilder.java:118)
	... 73 common frames omitted
Caused by: org.apache.ibatis.type.TypeException: Could not resolve type alias 'CountByUserIdResultMap'.  Cause: java.lang.ClassNotFoundException: Cannot find class: CountByUserIdResultMap
	at org.apache.ibatis.type.TypeAliasRegistry.resolveAlias(TypeAliasRegistry.java:120)
	at org.apache.ibatis.builder.BaseBuilder.resolveAlias(BaseBuilder.java:149)
	at org.apache.ibatis.builder.BaseBuilder.resolveClass(BaseBuilder.java:116)
	... 77 common frames omitted
Caused by: java.lang.ClassNotFoundException: Cannot find class: CountByUserIdResultMap
	at org.apache.ibatis.io.ClassLoaderWrapper.classForName(ClassLoaderWrapper.java:200)
	at org.apache.ibatis.io.ClassLoaderWrapper.classForName(ClassLoaderWrapper.java:89)
	at org.apache.ibatis.io.Resources.classForName(Resources.java:261)
	at org.apache.ibatis.type.TypeAliasRegistry.resolveAlias(TypeAliasRegistry.java:116)
	... 79 common frames omitted

[INFO] [2018-08-10 15:30:06.636]-[background-preinit] [org.hibernate.validator.internal.util.Version]
==> HV000001: Hibernate Validator 5.3.6.Final

[INFO] [2018-08-10 15:30:06.650]-[main] [org.springframework.context.annotation.AnnotationConfigApplicationContext]
==> Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@3a6f2de3: startup date [Fri Aug 10 15:30:06 CST 2018]; root of context hierarchy

[DEBUG] [2018-08-10 15:30:06.680]-[background-preinit] [org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver]
==> Cannot find javax.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.

[INFO] [2018-08-10 15:30:06.969]-[main] [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor]
==> JSR-330 'javax.inject.Inject' annotation found and supported for autowiring

[INFO] [2018-08-10 15:30:07.011]-[main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker]
==> Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$172d85d6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)

[DEBUG] [2018-08-10 15:30:07.065]-[main] [org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver]
==> Cannot find javax.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.

[DEBUG] [2018-08-10 15:30:07.074]-[main] [org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver]
==> Cannot find javax.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.

[DEBUG] [2018-08-10 15:30:07.079]-[main] [org.hibernate.validator.internal.engine.ConfigurationImpl]
==> Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator

[DEBUG] [2018-08-10 15:30:07.079]-[main] [org.hibernate.validator.internal.engine.ConfigurationImpl]
==> Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory

[DEBUG] [2018-08-10 15:30:07.080]-[main] [org.hibernate.validator.internal.engine.ConfigurationImpl]
==> Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy35

[DEBUG] [2018-08-10 15:30:07.082]-[main] [org.hibernate.validator.internal.xml.ValidationXmlParser]
==> Trying to load META-INF/validation.xml for XML based Validator configuration.

[DEBUG] [2018-08-10 15:30:07.083]-[main] [org.hibernate.validator.internal.xml.ResourceLoaderHelper]
==> Trying to load META-INF/validation.xml via user class loader

[DEBUG] [2018-08-10 15:30:07.084]-[main] [org.hibernate.validator.internal.xml.ResourceLoaderHelper]
==> Trying to load META-INF/validation.xml via TCCL

[DEBUG] [2018-08-10 15:30:07.085]-[main] [org.hibernate.validator.internal.xml.ResourceLoaderHelper]
==> Trying to load META-INF/validation.xml via Hibernate Validator's class loader

[DEBUG] [2018-08-10 15:30:07.085]-[main] [org.hibernate.validator.internal.xml.ValidationXmlParser]
==> No META-INF/validation.xml found. Using annotation based configuration only.

[WARN] [2018-08-10 15:30:07.476]-[main] [org.springframework.cloud.config.client.ConfigServicePropertySourceLocator]
==> Could not locate PropertySource: I/O error on GET request for "http://localhost:8888/application/default": 拒绝连接 (Connection refused); nested exception is java.net.ConnectException: 拒绝连接 (Connection refused)

[INFO] [2018-08-10 15:30:07.477]-[main] [com.dreawer.appxauth.AppxAuthApplication]
==> The following profiles are active: local

[WARN] [2018-08-10 15:30:08.095]-[main] [org.mybatis.spring.mapper.ClassPathMapperScanner]
==> No MyBatis mapper was found in '[com.dreawer.appxauth.persistence]' package. Please check your configuration.

[WARN] [2018-08-10 15:30:08.199]-[main] [org.mybatis.spring.mapper.ClassPathMapperScanner]
==> No MyBatis mapper was found in '[com.dreawer.appxauth]' package. Please check your configuration.

[DEBUG] [2018-08-10 15:30:08.871]-[main] [org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver]
==> Cannot find javax.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.

[DEBUG] [2018-08-10 15:30:08.872]-[main] [org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver]
==> Cannot find javax.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.

[DEBUG] [2018-08-10 15:30:08.872]-[main] [org.hibernate.validator.internal.engine.ConfigurationImpl]
==> Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator

[DEBUG] [2018-08-10 15:30:08.872]-[main] [org.hibernate.validator.internal.engine.ConfigurationImpl]
==> Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory

[DEBUG] [2018-08-10 15:30:08.873]-[main] [org.hibernate.validator.internal.engine.ConfigurationImpl]
==> Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy35

[DEBUG] [2018-08-10 15:30:08.873]-[main] [org.hibernate.validator.internal.xml.ValidationXmlParser]
==> Trying to load META-INF/validation.xml for XML based Validator configuration.

[DEBUG] [2018-08-10 15:30:08.873]-[main] [org.hibernate.validator.internal.xml.ResourceLoaderHelper]
==> Trying to load META-INF/validation.xml via user class loader

[DEBUG] [2018-08-10 15:30:08.873]-[main] [org.hibernate.validator.internal.xml.ResourceLoaderHelper]
==> Trying to load META-INF/validation.xml via TCCL

[DEBUG] [2018-08-10 15:30:08.873]-[main] [org.hibernate.validator.internal.xml.ResourceLoaderHelper]
==> Trying to load META-INF/validation.xml via Hibernate Validator's class loader

[DEBUG] [2018-08-10 15:30:08.873]-[main] [org.hibernate.validator.internal.xml.ValidationXmlParser]
==> No META-INF/validation.xml found. Using annotation based configuration only.

[INFO] [2018-08-10 15:30:09.154]-[main] [org.apache.coyote.http11.Http11NioProtocol]
==> Initializing ProtocolHandler ["http-nio-10120"]

[INFO] [2018-08-10 15:30:09.168]-[main] [org.apache.catalina.core.StandardService]
==> Starting service [Tomcat]

[INFO] [2018-08-10 15:30:09.168]-[main] [org.apache.catalina.core.StandardEngine]
==> Starting Servlet Engine: Apache Tomcat/8.5.31

[INFO] [2018-08-10 15:30:09.289]-[localhost-startStop-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]]
==> Initializing Spring embedded WebApplicationContext

[WARN] [2018-08-10 15:30:10.872]-[main] [org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext]
==> Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'authController': Unsatisfied dependency expressed through field 'authService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'authService': Unsatisfied dependency expressed through field 'authDao'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'authDao': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [/home/fenrir/eclipse-workspace/Persional/appx-auth/target/classes/com/dreawer/appxauth/persistence/UserCaseDao.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. The XML location is 'file [/home/fenrir/eclipse-workspace/Persional/appx-auth/target/classes/com/dreawer/appxauth/persistence/UserCaseDao.xml]'. Cause: java.lang.IllegalArgumentException: Mapped Statements collection already contains value for com.dreawer.appxauth.domain.UserCase.getUserCaseByConditionCount

[INFO] [2018-08-10 15:30:10.874]-[main] [org.apache.catalina.core.StandardService]
==> Stopping service [Tomcat]

[ERROR] [2018-08-10 15:30:10.932]-[main] [org.springframework.boot.SpringApplication]
==> Application startup failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'authController': Unsatisfied dependency expressed through field 'authService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'authService': Unsatisfied dependency expressed through field 'authDao'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'authDao': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [/home/fenrir/eclipse-workspace/Persional/appx-auth/target/classes/com/dreawer/appxauth/persistence/UserCaseDao.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. The XML location is 'file [/home/fenrir/eclipse-workspace/Persional/appx-auth/target/classes/com/dreawer/appxauth/persistence/UserCaseDao.xml]'. Cause: java.lang.IllegalArgumentException: Mapped Statements collection already contains value for com.dreawer.appxauth.domain.UserCase.getUserCaseByConditionCount
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:588)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:88)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1272)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:553)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:312)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:308)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:761)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:867)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:543)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:693)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:360)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:303)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1118)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1107)
	at com.dreawer.appxauth.AppxAuthApplication.main(AppxAuthApplication.java:23)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'authService': Unsatisfied dependency expressed through field 'authDao'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'authDao': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [/home/fenrir/eclipse-workspace/Persional/appx-auth/target/classes/com/dreawer/appxauth/persistence/UserCaseDao.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. The XML location is 'file [/home/fenrir/eclipse-workspace/Persional/appx-auth/target/classes/com/dreawer/appxauth/persistence/UserCaseDao.xml]'. Cause: java.lang.IllegalArgumentException: Mapped Statements collection already contains value for com.dreawer.appxauth.domain.UserCase.getUserCaseByConditionCount
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:588)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:88)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1272)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:553)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:312)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:308)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1066)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:585)
	... 19 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'authDao': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [/home/fenrir/eclipse-workspace/Persional/appx-auth/target/classes/com/dreawer/appxauth/persistence/UserCaseDao.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. The XML location is 'file [/home/fenrir/eclipse-workspace/Persional/appx-auth/target/classes/com/dreawer/appxauth/persistence/UserCaseDao.xml]'. Cause: java.lang.IllegalArgumentException: Mapped Statements collection already contains value for com.dreawer.appxauth.domain.UserCase.getUserCaseByConditionCount
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessPropertyValues(CommonAnnotationBeanPostProcessor.java:321)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1272)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:553)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:312)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:308)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1066)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:585)
	... 32 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [/home/fenrir/eclipse-workspace/Persional/appx-auth/target/classes/com/dreawer/appxauth/persistence/UserCaseDao.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. The XML location is 'file [/home/fenrir/eclipse-workspace/Persional/appx-auth/target/classes/com/dreawer/appxauth/persistence/UserCaseDao.xml]'. Cause: java.lang.IllegalArgumentException: Mapped Statements collection already contains value for com.dreawer.appxauth.domain.UserCase.getUserCaseByConditionCount
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1181)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1075)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:513)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:312)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:308)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.autowireResource(CommonAnnotationBeanPostProcessor.java:522)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.getResource(CommonAnnotationBeanPostProcessor.java:496)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor$ResourceElement.getResourceToInject(CommonAnnotationBeanPostProcessor.java:627)
	at org.springframework.beans.factory.annotation.InjectionMetadata$InjectedElement.inject(InjectionMetadata.java:178)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:88)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessPropertyValues(CommonAnnotationBeanPostProcessor.java:318)
	... 43 common frames omitted
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [/home/fenrir/eclipse-workspace/Persional/appx-auth/target/classes/com/dreawer/appxauth/persistence/UserCaseDao.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. The XML location is 'file [/home/fenrir/eclipse-workspace/Persional/appx-auth/target/classes/com/dreawer/appxauth/persistence/UserCaseDao.xml]'. Cause: java.lang.IllegalArgumentException: Mapped Statements collection already contains value for com.dreawer.appxauth.domain.UserCase.getUserCaseByConditionCount
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:189)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:588)
	... 57 common frames omitted
Caused by: org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [/home/fenrir/eclipse-workspace/Persional/appx-auth/target/classes/com/dreawer/appxauth/persistence/UserCaseDao.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. The XML location is 'file [/home/fenrir/eclipse-workspace/Persional/appx-auth/target/classes/com/dreawer/appxauth/persistence/UserCaseDao.xml]'. Cause: java.lang.IllegalArgumentException: Mapped Statements collection already contains value for com.dreawer.appxauth.domain.UserCase.getUserCaseByConditionCount
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:523)
	at org.mybatis.spring.SqlSessionFactoryBean.afterPropertiesSet(SqlSessionFactoryBean.java:380)
	at org.mybatis.spring.SqlSessionFactoryBean.getObject(SqlSessionFactoryBean.java:547)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration.sqlSessionFactory(MybatisAutoConfiguration.java:153)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$2de7d409.CGLIB$sqlSessionFactory$0(<generated>)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$2de7d409$$FastClassBySpringCGLIB$$7263e0eb.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:358)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$2de7d409.sqlSessionFactory(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:162)
	... 58 common frames omitted
Caused by: org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. The XML location is 'file [/home/fenrir/eclipse-workspace/Persional/appx-auth/target/classes/com/dreawer/appxauth/persistence/UserCaseDao.xml]'. Cause: java.lang.IllegalArgumentException: Mapped Statements collection already contains value for com.dreawer.appxauth.domain.UserCase.getUserCaseByConditionCount
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.configurationElement(XMLMapperBuilder.java:120)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.parse(XMLMapperBuilder.java:92)
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:521)
	... 71 common frames omitted
Caused by: java.lang.IllegalArgumentException: Mapped Statements collection already contains value for com.dreawer.appxauth.domain.UserCase.getUserCaseByConditionCount
	at org.apache.ibatis.session.Configuration$StrictMap.put(Configuration.java:872)
	at org.apache.ibatis.session.Configuration$StrictMap.put(Configuration.java:844)
	at org.apache.ibatis.session.Configuration.addMappedStatement(Configuration.java:668)
	at org.apache.ibatis.builder.MapperBuilderAssistant.addMappedStatement(MapperBuilderAssistant.java:302)
	at org.apache.ibatis.builder.xml.XMLStatementBuilder.parseStatementNode(XMLStatementBuilder.java:109)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.buildStatementFromContext(XMLMapperBuilder.java:135)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.buildStatementFromContext(XMLMapperBuilder.java:128)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.configurationElement(XMLMapperBuilder.java:118)
	... 73 common frames omitted

[INFO] [2018-08-10 15:31:48.012]-[background-preinit] [org.hibernate.validator.internal.util.Version]
==> HV000001: Hibernate Validator 5.3.6.Final

[INFO] [2018-08-10 15:31:48.079]-[main] [org.springframework.context.annotation.AnnotationConfigApplicationContext]
==> Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@549949be: startup date [Fri Aug 10 15:31:48 CST 2018]; root of context hierarchy

[DEBUG] [2018-08-10 15:31:48.080]-[background-preinit] [org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver]
==> Cannot find javax.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.

[INFO] [2018-08-10 15:31:48.464]-[main] [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor]
==> JSR-330 'javax.inject.Inject' annotation found and supported for autowiring

[INFO] [2018-08-10 15:31:48.515]-[main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker]
==> Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$b9b33037] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)

[DEBUG] [2018-08-10 15:31:48.586]-[main] [org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver]
==> Cannot find javax.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.

[DEBUG] [2018-08-10 15:31:48.599]-[main] [org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver]
==> Cannot find javax.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.

[DEBUG] [2018-08-10 15:31:48.606]-[main] [org.hibernate.validator.internal.engine.ConfigurationImpl]
==> Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator

[DEBUG] [2018-08-10 15:31:48.607]-[main] [org.hibernate.validator.internal.engine.ConfigurationImpl]
==> Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory

[DEBUG] [2018-08-10 15:31:48.608]-[main] [org.hibernate.validator.internal.engine.ConfigurationImpl]
==> Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy35

[DEBUG] [2018-08-10 15:31:48.611]-[main] [org.hibernate.validator.internal.xml.ValidationXmlParser]
==> Trying to load META-INF/validation.xml for XML based Validator configuration.

[DEBUG] [2018-08-10 15:31:48.613]-[main] [org.hibernate.validator.internal.xml.ResourceLoaderHelper]
==> Trying to load META-INF/validation.xml via user class loader

[DEBUG] [2018-08-10 15:31:48.614]-[main] [org.hibernate.validator.internal.xml.ResourceLoaderHelper]
==> Trying to load META-INF/validation.xml via TCCL

[DEBUG] [2018-08-10 15:31:48.615]-[main] [org.hibernate.validator.internal.xml.ResourceLoaderHelper]
==> Trying to load META-INF/validation.xml via Hibernate Validator's class loader

[DEBUG] [2018-08-10 15:31:48.616]-[main] [org.hibernate.validator.internal.xml.ValidationXmlParser]
==> No META-INF/validation.xml found. Using annotation based configuration only.

[WARN] [2018-08-10 15:31:49.198]-[main] [org.springframework.cloud.config.client.ConfigServicePropertySourceLocator]
==> Could not locate PropertySource: I/O error on GET request for "http://localhost:8888/application/default": 拒绝连接 (Connection refused); nested exception is java.net.ConnectException: 拒绝连接 (Connection refused)

[INFO] [2018-08-10 15:31:49.199]-[main] [com.dreawer.appxauth.AppxAuthApplication]
==> The following profiles are active: local

[WARN] [2018-08-10 15:31:49.886]-[main] [org.mybatis.spring.mapper.ClassPathMapperScanner]
==> No MyBatis mapper was found in '[com.dreawer.appxauth.persistence]' package. Please check your configuration.

[WARN] [2018-08-10 15:31:50.032]-[main] [org.mybatis.spring.mapper.ClassPathMapperScanner]
==> No MyBatis mapper was found in '[com.dreawer.appxauth]' package. Please check your configuration.

[DEBUG] [2018-08-10 15:31:51.164]-[main] [org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver]
==> Cannot find javax.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.

[DEBUG] [2018-08-10 15:31:51.167]-[main] [org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver]
==> Cannot find javax.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.

[DEBUG] [2018-08-10 15:31:51.168]-[main] [org.hibernate.validator.internal.engine.ConfigurationImpl]
==> Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator

[DEBUG] [2018-08-10 15:31:51.169]-[main] [org.hibernate.validator.internal.engine.ConfigurationImpl]
==> Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory

[DEBUG] [2018-08-10 15:31:51.170]-[main] [org.hibernate.validator.internal.engine.ConfigurationImpl]
==> Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy35

[DEBUG] [2018-08-10 15:31:51.170]-[main] [org.hibernate.validator.internal.xml.ValidationXmlParser]
==> Trying to load META-INF/validation.xml for XML based Validator configuration.

[DEBUG] [2018-08-10 15:31:51.170]-[main] [org.hibernate.validator.internal.xml.ResourceLoaderHelper]
==> Trying to load META-INF/validation.xml via user class loader

[DEBUG] [2018-08-10 15:31:51.171]-[main] [org.hibernate.validator.internal.xml.ResourceLoaderHelper]
==> Trying to load META-INF/validation.xml via TCCL

[DEBUG] [2018-08-10 15:31:51.171]-[main] [org.hibernate.validator.internal.xml.ResourceLoaderHelper]
==> Trying to load META-INF/validation.xml via Hibernate Validator's class loader

[DEBUG] [2018-08-10 15:31:51.172]-[main] [org.hibernate.validator.internal.xml.ValidationXmlParser]
==> No META-INF/validation.xml found. Using annotation based configuration only.

[INFO] [2018-08-10 15:31:51.699]-[main] [org.apache.coyote.http11.Http11NioProtocol]
==> Initializing ProtocolHandler ["http-nio-10120"]

[INFO] [2018-08-10 15:31:51.721]-[main] [org.apache.catalina.core.StandardService]
==> Starting service [Tomcat]

[INFO] [2018-08-10 15:31:51.721]-[main] [org.apache.catalina.core.StandardEngine]
==> Starting Servlet Engine: Apache Tomcat/8.5.31

[INFO] [2018-08-10 15:31:52.037]-[localhost-startStop-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]]
==> Initializing Spring embedded WebApplicationContext

[WARN] [2018-08-10 15:31:53.949]-[main] [org.springframework.aop.framework.CglibAopProxy]
==> Unable to proxy interface-implementing method [public final void org.springframework.dao.support.DaoSupport.afterPropertiesSet() throws java.lang.IllegalArgumentException,org.springframework.beans.factory.BeanInitializationException] because it is marked as final: Consider using interface-based JDK proxies instead!

[WARN] [2018-08-10 15:31:54.097]-[main] [org.springframework.aop.framework.CglibAopProxy]
==> Unable to proxy interface-implementing method [public final void org.springframework.dao.support.DaoSupport.afterPropertiesSet() throws java.lang.IllegalArgumentException,org.springframework.beans.factory.BeanInitializationException] because it is marked as final: Consider using interface-based JDK proxies instead!

[WARN] [2018-08-10 15:31:54.121]-[main] [org.springframework.aop.framework.CglibAopProxy]
==> Unable to proxy interface-implementing method [public final void org.springframework.dao.support.DaoSupport.afterPropertiesSet() throws java.lang.IllegalArgumentException,org.springframework.beans.factory.BeanInitializationException] because it is marked as final: Consider using interface-based JDK proxies instead!

[WARN] [2018-08-10 15:31:54.146]-[main] [org.springframework.aop.framework.CglibAopProxy]
==> Unable to proxy interface-implementing method [public final void org.springframework.dao.support.DaoSupport.afterPropertiesSet() throws java.lang.IllegalArgumentException,org.springframework.beans.factory.BeanInitializationException] because it is marked as final: Consider using interface-based JDK proxies instead!

[WARN] [2018-08-10 15:31:54.170]-[main] [org.springframework.aop.framework.CglibAopProxy]
==> Unable to proxy interface-implementing method [public final void org.springframework.dao.support.DaoSupport.afterPropertiesSet() throws java.lang.IllegalArgumentException,org.springframework.beans.factory.BeanInitializationException] because it is marked as final: Consider using interface-based JDK proxies instead!

[INFO] [2018-08-10 15:31:55.546]-[main] [springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping]
==> Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]

[DEBUG] [2018-08-10 15:31:55.703]-[main] [org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver]
==> Cannot find javax.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.

[DEBUG] [2018-08-10 15:31:55.712]-[main] [org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver]
==> Cannot find javax.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.

[DEBUG] [2018-08-10 15:31:55.712]-[main] [org.hibernate.validator.internal.engine.ConfigurationImpl]
==> Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator

[DEBUG] [2018-08-10 15:31:55.712]-[main] [org.hibernate.validator.internal.engine.ConfigurationImpl]
==> Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory

[DEBUG] [2018-08-10 15:31:55.713]-[main] [org.hibernate.validator.internal.engine.ConfigurationImpl]
==> Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy35

[DEBUG] [2018-08-10 15:31:55.713]-[main] [org.hibernate.validator.internal.xml.ValidationXmlParser]
==> Trying to load META-INF/validation.xml for XML based Validator configuration.

[DEBUG] [2018-08-10 15:31:55.713]-[main] [org.hibernate.validator.internal.xml.ResourceLoaderHelper]
==> Trying to load META-INF/validation.xml via user class loader

[DEBUG] [2018-08-10 15:31:55.713]-[main] [org.hibernate.validator.internal.xml.ResourceLoaderHelper]
==> Trying to load META-INF/validation.xml via TCCL

[DEBUG] [2018-08-10 15:31:55.713]-[main] [org.hibernate.validator.internal.xml.ResourceLoaderHelper]
==> Trying to load META-INF/validation.xml via Hibernate Validator's class loader

[DEBUG] [2018-08-10 15:31:55.713]-[main] [org.hibernate.validator.internal.xml.ValidationXmlParser]
==> No META-INF/validation.xml found. Using annotation based configuration only.

[WARN] [2018-08-10 15:31:57.337]-[main] [org.springframework.cloud.netflix.archaius.ArchaiusAutoConfiguration]
==> No spring.application.name found, defaulting to 'application'

[WARN] [2018-08-10 15:31:57.358]-[main] [com.netflix.config.sources.URLConfigurationSource]
==> No URLs will be polled as dynamic configuration sources.

[INFO] [2018-08-10 15:31:57.359]-[main] [com.netflix.config.sources.URLConfigurationSource]
==> To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.

[WARN] [2018-08-10 15:31:57.372]-[main] [com.netflix.config.sources.URLConfigurationSource]
==> No URLs will be polled as dynamic configuration sources.

[INFO] [2018-08-10 15:31:57.373]-[main] [com.netflix.config.sources.URLConfigurationSource]
==> To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.

[DEBUG] [2018-08-10 15:31:58.224]-[main] [org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver]
==> Cannot find javax.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.

[DEBUG] [2018-08-10 15:31:58.225]-[main] [org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver]
==> Cannot find javax.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.

[DEBUG] [2018-08-10 15:31:58.226]-[main] [org.hibernate.validator.internal.engine.ConfigurationImpl]
==> Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator

[DEBUG] [2018-08-10 15:31:58.226]-[main] [org.hibernate.validator.internal.engine.ConfigurationImpl]
==> Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory

[DEBUG] [2018-08-10 15:31:58.226]-[main] [org.hibernate.validator.internal.engine.ConfigurationImpl]
==> Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy35

[DEBUG] [2018-08-10 15:31:58.226]-[main] [org.hibernate.validator.internal.xml.ValidationXmlParser]
==> Trying to load META-INF/validation.xml for XML based Validator configuration.

[DEBUG] [2018-08-10 15:31:58.226]-[main] [org.hibernate.validator.internal.xml.ResourceLoaderHelper]
==> Trying to load META-INF/validation.xml via user class loader

[DEBUG] [2018-08-10 15:31:58.226]-[main] [org.hibernate.validator.internal.xml.ResourceLoaderHelper]
==> Trying to load META-INF/validation.xml via TCCL

[DEBUG] [2018-08-10 15:31:58.227]-[main] [org.hibernate.validator.internal.xml.ResourceLoaderHelper]
==> Trying to load META-INF/validation.xml via Hibernate Validator's class loader

[DEBUG] [2018-08-10 15:31:58.227]-[main] [org.hibernate.validator.internal.xml.ValidationXmlParser]
==> No META-INF/validation.xml found. Using annotation based configuration only.

[INFO] [2018-08-10 15:31:58.243]-[main] [springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper]
==> Context refreshed

[INFO] [2018-08-10 15:31:58.362]-[main] [springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper]
==> Found 1 custom documentation plugin(s)

[INFO] [2018-08-10 15:31:58.401]-[main] [springfox.documentation.spring.web.scanners.ApiListingReferenceScanner]
==> Scanning for api listing references

[INFO] [2018-08-10 15:31:58.773]-[main] [org.apache.coyote.http11.Http11NioProtocol]
==> Starting ProtocolHandler ["http-nio-10120"]

[INFO] [2018-08-10 15:31:58.781]-[main] [org.apache.tomcat.util.net.NioSelectorPool]
==> Using a shared selector for servlet write/read

[INFO] [2018-08-10 15:31:58.972]-[main] [com.dreawer.appxauth.AppxAuthApplication]
==> Started AppxAuthApplication in 12.504 seconds (JVM running for 13.985)

[INFO] [2018-08-10 15:34:19.646]-[http-nio-10120-exec-2] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]]
==> Initializing Spring FrameworkServlet 'dispatcherServlet'

[WARN] [2018-08-10 15:34:19.803]-[http-nio-10120-exec-2] [org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver]
==> Failed to read HTTP message: org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Can not deserialize instance of java.lang.String out of START_OBJECT token; nested exception is com.fasterxml.jackson.databind.JsonMappingException: Can not deserialize instance of java.lang.String out of START_OBJECT token
 at [Source: java.io.PushbackInputStream@3b35bdfe; line: 2, column: 13] (through reference chain: com.dreawer.appxauth.form.UserCaseCountForm["userIds"]->java.util.ArrayList[0])

[DEBUG] [2018-08-10 15:35:13.025]-[http-nio-10120-exec-4] [org.hibernate.validator.internal.metadata.descriptor.ConstraintDescriptorImpl]
==> Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.NotNull, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=FIELD, definedOn=DEFINED_LOCALLY, groups=[interface javax.validation.groups.Default], attributes={message={javax.validation.constraints.NotNull.message}, payload=[Ljava.lang.Class;@50cbb6a5, groups=[Ljava.lang.Class;@1e0e2c91}, constraintType=GENERIC}.

[DEBUG] [2018-08-10 15:35:13.026]-[http-nio-10120-exec-4] [org.hibernate.validator.internal.metadata.descriptor.ConstraintDescriptorImpl]
==> Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.Size, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=FIELD, definedOn=DEFINED_LOCALLY, groups=[interface javax.validation.groups.Default], attributes={groups=[Ljava.lang.Class;@2d026df1, min=1, message={javax.validation.constraints.Size.message}, payload=[Ljava.lang.Class;@477d2d5f, max=2147483647}, constraintType=GENERIC}.

[INFO] [2018-08-10 15:35:13.178]-[http-nio-10120-exec-4] [com.alibaba.druid.pool.DruidDataSource]
==> {dataSource-1} inited

[ERROR] [2018-08-10 15:35:13.486]-[http-nio-10120-exec-4] [com.dreawer.appxauth.controller.CaseController]
==> org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'b18981ede1b344d59be97eaa2dcfeb8c' in 'where clause'
### The error may exist in file [/home/fenrir/eclipse-workspace/Persional/appx-auth/target/classes/com/dreawer/appxauth/persistence/UserCaseDao.xml]
### The error may involve com.dreawer.appxauth.domain.UserCase.getUserCaseByIdCount-Inline
### The error occurred while setting parameters
### SQL: SELECT COUNT(1) AS cont , appx.crer_id AS crer_id, EXISTS(SELECT id FROM appx_user_case where         appx.exp_date < ?) AS yellow,EXISTS(SELECT id FROM appx_user_case where         appx.exp_date < ?) AS red         FROM             ( SELECT * FROM  appx_user_case                 WHERE crer_id in                  (                       b18981ede1b344d59be97eaa2dcfeb8c                  )              ) as appx         group by (crer_id)
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'b18981ede1b344d59be97eaa2dcfeb8c' in 'where clause'
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'b18981ede1b344d59be97eaa2dcfeb8c' in 'where clause'

[INFO] [2018-08-10 15:36:02.825]-[Thread-31] [com.alibaba.druid.pool.DruidDataSource]
==> {dataSource-1} closed

[INFO] [2018-08-10 15:36:07.723]-[main] [org.springframework.context.annotation.AnnotationConfigApplicationContext]
==> Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@549949be: startup date [Fri Aug 10 15:36:07 CST 2018]; root of context hierarchy

[INFO] [2018-08-10 15:36:07.745]-[background-preinit] [org.hibernate.validator.internal.util.Version]
==> HV000001: Hibernate Validator 5.3.6.Final

[DEBUG] [2018-08-10 15:36:07.774]-[background-preinit] [org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver]
==> Cannot find javax.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.

[INFO] [2018-08-10 15:36:08.056]-[main] [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor]
==> JSR-330 'javax.inject.Inject' annotation found and supported for autowiring

[INFO] [2018-08-10 15:36:08.112]-[main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker]
==> Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$1d860dfa] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)

[DEBUG] [2018-08-10 15:36:08.169]-[main] [org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver]
==> Cannot find javax.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.

[DEBUG] [2018-08-10 15:36:08.178]-[main] [org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver]
==> Cannot find javax.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.

[DEBUG] [2018-08-10 15:36:08.182]-[main] [org.hibernate.validator.internal.engine.ConfigurationImpl]
==> Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator

[DEBUG] [2018-08-10 15:36:08.183]-[main] [org.hibernate.validator.internal.engine.ConfigurationImpl]
==> Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory

[DEBUG] [2018-08-10 15:36:08.184]-[main] [org.hibernate.validator.internal.engine.ConfigurationImpl]
==> Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy35

[DEBUG] [2018-08-10 15:36:08.185]-[main] [org.hibernate.validator.internal.xml.ValidationXmlParser]
==> Trying to load META-INF/validation.xml for XML based Validator configuration.

[DEBUG] [2018-08-10 15:36:08.187]-[main] [org.hibernate.validator.internal.xml.ResourceLoaderHelper]
==> Trying to load META-INF/validation.xml via user class loader

[DEBUG] [2018-08-10 15:36:08.187]-[main] [org.hibernate.validator.internal.xml.ResourceLoaderHelper]
==> Trying to load META-INF/validation.xml via TCCL

[DEBUG] [2018-08-10 15:36:08.188]-[main] [org.hibernate.validator.internal.xml.ResourceLoaderHelper]
==> Trying to load META-INF/validation.xml via Hibernate Validator's class loader

[DEBUG] [2018-08-10 15:36:08.188]-[main] [org.hibernate.validator.internal.xml.ValidationXmlParser]
==> No META-INF/validation.xml found. Using annotation based configuration only.

[WARN] [2018-08-10 15:36:08.572]-[main] [org.springframework.cloud.config.client.ConfigServicePropertySourceLocator]
==> Could not locate PropertySource: I/O error on GET request for "http://localhost:8888/application/default": 拒绝连接 (Connection refused); nested exception is java.net.ConnectException: 拒绝连接 (Connection refused)

[INFO] [2018-08-10 15:36:08.573]-[main] [com.dreawer.appxauth.AppxAuthApplication]
==> The following profiles are active: local

[WARN] [2018-08-10 15:36:09.248]-[main] [org.mybatis.spring.mapper.ClassPathMapperScanner]
==> No MyBatis mapper was found in '[com.dreawer.appxauth.persistence]' package. Please check your configuration.

[WARN] [2018-08-10 15:36:09.356]-[main] [org.mybatis.spring.mapper.ClassPathMapperScanner]
==> No MyBatis mapper was found in '[com.dreawer.appxauth]' package. Please check your configuration.

[DEBUG] [2018-08-10 15:36:10.014]-[main] [org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver]
==> Cannot find javax.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.

[DEBUG] [2018-08-10 15:36:10.016]-[main] [org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver]
==> Cannot find javax.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.

[DEBUG] [2018-08-10 15:36:10.016]-[main] [org.hibernate.validator.internal.engine.ConfigurationImpl]
==> Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator

[DEBUG] [2018-08-10 15:36:10.016]-[main] [org.hibernate.validator.internal.engine.ConfigurationImpl]
==> Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory

[DEBUG] [2018-08-10 15:36:10.016]-[main] [org.hibernate.validator.internal.engine.ConfigurationImpl]
==> Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy35

[DEBUG] [2018-08-10 15:36:10.016]-[main] [org.hibernate.validator.internal.xml.ValidationXmlParser]
==> Trying to load META-INF/validation.xml for XML based Validator configuration.

[DEBUG] [2018-08-10 15:36:10.017]-[main] [org.hibernate.validator.internal.xml.ResourceLoaderHelper]
==> Trying to load META-INF/validation.xml via user class loader

[DEBUG] [2018-08-10 15:36:10.017]-[main] [org.hibernate.validator.internal.xml.ResourceLoaderHelper]
==> Trying to load META-INF/validation.xml via TCCL

[DEBUG] [2018-08-10 15:36:10.017]-[main] [org.hibernate.validator.internal.xml.ResourceLoaderHelper]
==> Trying to load META-INF/validation.xml via Hibernate Validator's class loader

[DEBUG] [2018-08-10 15:36:10.017]-[main] [org.hibernate.validator.internal.xml.ValidationXmlParser]
==> No META-INF/validation.xml found. Using annotation based configuration only.

[INFO] [2018-08-10 15:36:10.410]-[main] [org.apache.coyote.http11.Http11NioProtocol]
==> Initializing ProtocolHandler ["http-nio-10120"]

[INFO] [2018-08-10 15:36:10.431]-[main] [org.apache.catalina.core.StandardService]
==> Starting service [Tomcat]

[INFO] [2018-08-10 15:36:10.432]-[main] [org.apache.catalina.core.StandardEngine]
==> Starting Servlet Engine: Apache Tomcat/8.5.31

[INFO] [2018-08-10 15:36:10.655]-[localhost-startStop-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]]
==> Initializing Spring embedded WebApplicationContext

[WARN] [2018-08-10 15:36:12.547]-[main] [org.springframework.aop.framework.CglibAopProxy]
==> Unable to proxy interface-implementing method [public final void org.springframework.dao.support.DaoSupport.afterPropertiesSet() throws java.lang.IllegalArgumentException,org.springframework.beans.factory.BeanInitializationException] because it is marked as final: Consider using interface-based JDK proxies instead!

[WARN] [2018-08-10 15:36:12.701]-[main] [org.springframework.aop.framework.CglibAopProxy]
==> Unable to proxy interface-implementing method [public final void org.springframework.dao.support.DaoSupport.afterPropertiesSet() throws java.lang.IllegalArgumentException,org.springframework.beans.factory.BeanInitializationException] because it is marked as final: Consider using interface-based JDK proxies instead!

[WARN] [2018-08-10 15:36:12.736]-[main] [org.springframework.aop.framework.CglibAopProxy]
==> Unable to proxy interface-implementing method [public final void org.springframework.dao.support.DaoSupport.afterPropertiesSet() throws java.lang.IllegalArgumentException,org.springframework.beans.factory.BeanInitializationException] because it is marked as final: Consider using interface-based JDK proxies instead!

[WARN] [2018-08-10 15:36:12.782]-[main] [org.springframework.aop.framework.CglibAopProxy]
==> Unable to proxy interface-implementing method [public final void org.springframework.dao.support.DaoSupport.afterPropertiesSet() throws java.lang.IllegalArgumentException,org.springframework.beans.factory.BeanInitializationException] because it is marked as final: Consider using interface-based JDK proxies instead!

[WARN] [2018-08-10 15:36:12.824]-[main] [org.springframework.aop.framework.CglibAopProxy]
==> Unable to proxy interface-implementing method [public final void org.springframework.dao.support.DaoSupport.afterPropertiesSet() throws java.lang.IllegalArgumentException,org.springframework.beans.factory.BeanInitializationException] because it is marked as final: Consider using interface-based JDK proxies instead!

[INFO] [2018-08-10 15:36:14.173]-[main] [springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping]
==> Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]

[DEBUG] [2018-08-10 15:36:14.366]-[main] [org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver]
==> Cannot find javax.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.

[DEBUG] [2018-08-10 15:36:14.374]-[main] [org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver]
==> Cannot find javax.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.

[DEBUG] [2018-08-10 15:36:14.374]-[main] [org.hibernate.validator.internal.engine.ConfigurationImpl]
==> Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator

[DEBUG] [2018-08-10 15:36:14.374]-[main] [org.hibernate.validator.internal.engine.ConfigurationImpl]
==> Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory

[DEBUG] [2018-08-10 15:36:14.375]-[main] [org.hibernate.validator.internal.engine.ConfigurationImpl]
==> Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy35

[DEBUG] [2018-08-10 15:36:14.375]-[main] [org.hibernate.validator.internal.xml.ValidationXmlParser]
==> Trying to load META-INF/validation.xml for XML based Validator configuration.

[DEBUG] [2018-08-10 15:36:14.375]-[main] [org.hibernate.validator.internal.xml.ResourceLoaderHelper]
==> Trying to load META-INF/validation.xml via user class loader

[DEBUG] [2018-08-10 15:36:14.375]-[main] [org.hibernate.validator.internal.xml.ResourceLoaderHelper]
==> Trying to load META-INF/validation.xml via TCCL

[DEBUG] [2018-08-10 15:36:14.375]-[main] [org.hibernate.validator.internal.xml.ResourceLoaderHelper]
==> Trying to load META-INF/validation.xml via Hibernate Validator's class loader

[DEBUG] [2018-08-10 15:36:14.376]-[main] [org.hibernate.validator.internal.xml.ValidationXmlParser]
==> No META-INF/validation.xml found. Using annotation based configuration only.

[WARN] [2018-08-10 15:36:15.563]-[main] [org.springframework.cloud.netflix.archaius.ArchaiusAutoConfiguration]
==> No spring.application.name found, defaulting to 'application'

[WARN] [2018-08-10 15:36:15.566]-[main] [com.netflix.config.sources.URLConfigurationSource]
==> No URLs will be polled as dynamic configuration sources.

[INFO] [2018-08-10 15:36:15.566]-[main] [com.netflix.config.sources.URLConfigurationSource]
==> To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.

[WARN] [2018-08-10 15:36:15.571]-[main] [com.netflix.config.sources.URLConfigurationSource]
==> No URLs will be polled as dynamic configuration sources.

[INFO] [2018-08-10 15:36:15.571]-[main] [com.netflix.config.sources.URLConfigurationSource]
==> To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.

[DEBUG] [2018-08-10 15:36:16.347]-[main] [org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver]
==> Cannot find javax.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.

[DEBUG] [2018-08-10 15:36:16.349]-[main] [org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver]
==> Cannot find javax.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.

[DEBUG] [2018-08-10 15:36:16.350]-[main] [org.hibernate.validator.internal.engine.ConfigurationImpl]
==> Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator

[DEBUG] [2018-08-10 15:36:16.350]-[main] [org.hibernate.validator.internal.engine.ConfigurationImpl]
==> Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory

[DEBUG] [2018-08-10 15:36:16.350]-[main] [org.hibernate.validator.internal.engine.ConfigurationImpl]
==> Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy35

[DEBUG] [2018-08-10 15:36:16.350]-[main] [org.hibernate.validator.internal.xml.ValidationXmlParser]
==> Trying to load META-INF/validation.xml for XML based Validator configuration.

[DEBUG] [2018-08-10 15:36:16.350]-[main] [org.hibernate.validator.internal.xml.ResourceLoaderHelper]
==> Trying to load META-INF/validation.xml via user class loader

[DEBUG] [2018-08-10 15:36:16.350]-[main] [org.hibernate.validator.internal.xml.ResourceLoaderHelper]
==> Trying to load META-INF/validation.xml via TCCL

[DEBUG] [2018-08-10 15:36:16.351]-[main] [org.hibernate.validator.internal.xml.ResourceLoaderHelper]
==> Trying to load META-INF/validation.xml via Hibernate Validator's class loader

[DEBUG] [2018-08-10 15:36:16.351]-[main] [org.hibernate.validator.internal.xml.ValidationXmlParser]
==> No META-INF/validation.xml found. Using annotation based configuration only.

[INFO] [2018-08-10 15:36:16.368]-[main] [springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper]
==> Context refreshed

[INFO] [2018-08-10 15:36:16.386]-[main] [springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper]
==> Found 1 custom documentation plugin(s)

[INFO] [2018-08-10 15:36:16.421]-[main] [springfox.documentation.spring.web.scanners.ApiListingReferenceScanner]
==> Scanning for api listing references

[INFO] [2018-08-10 15:36:16.717]-[main] [org.apache.coyote.http11.Http11NioProtocol]
==> Starting ProtocolHandler ["http-nio-10120"]

[INFO] [2018-08-10 15:36:16.722]-[main] [org.apache.tomcat.util.net.NioSelectorPool]
==> Using a shared selector for servlet write/read

[INFO] [2018-08-10 15:36:16.742]-[main] [com.dreawer.appxauth.AppxAuthApplication]
==> Started AppxAuthApplication in 10.518 seconds (JVM running for 12.17)

[INFO] [2018-08-10 15:36:20.160]-[http-nio-10120-exec-2] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]]
==> Initializing Spring FrameworkServlet 'dispatcherServlet'

[DEBUG] [2018-08-10 15:36:20.234]-[http-nio-10120-exec-2] [org.hibernate.validator.internal.metadata.descriptor.ConstraintDescriptorImpl]
==> Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.NotNull, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=FIELD, definedOn=DEFINED_LOCALLY, groups=[interface javax.validation.groups.Default], attributes={message={javax.validation.constraints.NotNull.message}, payload=[Ljava.lang.Class;@48e392bc, groups=[Ljava.lang.Class;@33984636}, constraintType=GENERIC}.

[DEBUG] [2018-08-10 15:36:20.234]-[http-nio-10120-exec-2] [org.hibernate.validator.internal.metadata.descriptor.ConstraintDescriptorImpl]
==> Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.Size, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=FIELD, definedOn=DEFINED_LOCALLY, groups=[interface javax.validation.groups.Default], attributes={groups=[Ljava.lang.Class;@3e2cac52, min=1, message={javax.validation.constraints.Size.message}, payload=[Ljava.lang.Class;@e163406, max=2147483647}, constraintType=GENERIC}.

[INFO] [2018-08-10 15:36:20.370]-[http-nio-10120-exec-2] [com.alibaba.druid.pool.DruidDataSource]
==> {dataSource-1} inited

[INFO] [2018-08-10 15:40:01.739]-[Thread-27] [com.alibaba.druid.pool.DruidDataSource]
==> {dataSource-1} closed

[INFO] [2018-08-10 15:40:10.391]-[background-preinit] [org.hibernate.validator.internal.util.Version]
==> HV000001: Hibernate Validator 5.3.6.Final

[DEBUG] [2018-08-10 15:40:10.438]-[background-preinit] [org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver]
==> Cannot find javax.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.

[INFO] [2018-08-10 15:40:10.490]-[main] [org.springframework.context.annotation.AnnotationConfigApplicationContext]
==> Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@549949be: startup date [Fri Aug 10 15:40:10 CST 2018]; root of context hierarchy

[INFO] [2018-08-10 15:40:10.810]-[main] [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor]
==> JSR-330 'javax.inject.Inject' annotation found and supported for autowiring

[INFO] [2018-08-10 15:40:10.869]-[main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker]
==> Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$b3c7e0b7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)

[DEBUG] [2018-08-10 15:40:10.938]-[main] [org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver]
==> Cannot find javax.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.

[DEBUG] [2018-08-10 15:40:10.950]-[main] [org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver]
==> Cannot find javax.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.

[DEBUG] [2018-08-10 15:40:10.956]-[main] [org.hibernate.validator.internal.engine.ConfigurationImpl]
==> Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator

[DEBUG] [2018-08-10 15:40:10.957]-[main] [org.hibernate.validator.internal.engine.ConfigurationImpl]
==> Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory

[DEBUG] [2018-08-10 15:40:10.958]-[main] [org.hibernate.validator.internal.engine.ConfigurationImpl]
==> Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy35

[DEBUG] [2018-08-10 15:40:10.960]-[main] [org.hibernate.validator.internal.xml.ValidationXmlParser]
==> Trying to load META-INF/validation.xml for XML based Validator configuration.

[DEBUG] [2018-08-10 15:40:10.962]-[main] [org.hibernate.validator.internal.xml.ResourceLoaderHelper]
==> Trying to load META-INF/validation.xml via user class loader

[DEBUG] [2018-08-10 15:40:10.963]-[main] [org.hibernate.validator.internal.xml.ResourceLoaderHelper]
==> Trying to load META-INF/validation.xml via TCCL

[DEBUG] [2018-08-10 15:40:10.964]-[main] [org.hibernate.validator.internal.xml.ResourceLoaderHelper]
==> Trying to load META-INF/validation.xml via Hibernate Validator's class loader

[DEBUG] [2018-08-10 15:40:10.964]-[main] [org.hibernate.validator.internal.xml.ValidationXmlParser]
==> No META-INF/validation.xml found. Using annotation based configuration only.

[WARN] [2018-08-10 15:40:11.479]-[main] [org.springframework.cloud.config.client.ConfigServicePropertySourceLocator]
==> Could not locate PropertySource: I/O error on GET request for "http://localhost:8888/application/default": 拒绝连接 (Connection refused); nested exception is java.net.ConnectException: 拒绝连接 (Connection refused)

[INFO] [2018-08-10 15:40:11.480]-[main] [com.dreawer.appxauth.AppxAuthApplication]
==> The following profiles are active: local

[WARN] [2018-08-10 15:40:12.138]-[main] [org.mybatis.spring.mapper.ClassPathMapperScanner]
==> No MyBatis mapper was found in '[com.dreawer.appxauth.persistence]' package. Please check your configuration.

[WARN] [2018-08-10 15:40:12.255]-[main] [org.mybatis.spring.mapper.ClassPathMapperScanner]
==> No MyBatis mapper was found in '[com.dreawer.appxauth]' package. Please check your configuration.

[DEBUG] [2018-08-10 15:40:12.962]-[main] [org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver]
==> Cannot find javax.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.

[DEBUG] [2018-08-10 15:40:12.964]-[main] [org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver]
==> Cannot find javax.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.

[DEBUG] [2018-08-10 15:40:12.964]-[main] [org.hibernate.validator.internal.engine.ConfigurationImpl]
==> Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator

[DEBUG] [2018-08-10 15:40:12.964]-[main] [org.hibernate.validator.internal.engine.ConfigurationImpl]
==> Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory

[DEBUG] [2018-08-10 15:40:12.964]-[main] [org.hibernate.validator.internal.engine.ConfigurationImpl]
==> Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy35

[DEBUG] [2018-08-10 15:40:12.964]-[main] [org.hibernate.validator.internal.xml.ValidationXmlParser]
==> Trying to load META-INF/validation.xml for XML based Validator configuration.

[DEBUG] [2018-08-10 15:40:12.965]-[main] [org.hibernate.validator.internal.xml.ResourceLoaderHelper]
==> Trying to load META-INF/validation.xml via user class loader

[DEBUG] [2018-08-10 15:40:12.965]-[main] [org.hibernate.validator.internal.xml.ResourceLoaderHelper]
==> Trying to load META-INF/validation.xml via TCCL

[DEBUG] [2018-08-10 15:40:12.965]-[main] [org.hibernate.validator.internal.xml.ResourceLoaderHelper]
==> Trying to load META-INF/validation.xml via Hibernate Validator's class loader

[DEBUG] [2018-08-10 15:40:12.965]-[main] [org.hibernate.validator.internal.xml.ValidationXmlParser]
==> No META-INF/validation.xml found. Using annotation based configuration only.

[INFO] [2018-08-10 15:40:13.295]-[main] [org.apache.coyote.http11.Http11NioProtocol]
==> Initializing ProtocolHandler ["http-nio-10120"]

[INFO] [2018-08-10 15:40:13.314]-[main] [org.apache.catalina.core.StandardService]
==> Starting service [Tomcat]

[INFO] [2018-08-10 15:40:13.314]-[main] [org.apache.catalina.core.StandardEngine]
==> Starting Servlet Engine: Apache Tomcat/8.5.31

[INFO] [2018-08-10 15:40:13.492]-[localhost-startStop-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]]
==> Initializing Spring embedded WebApplicationContext

[WARN] [2018-08-10 15:40:14.862]-[main] [org.springframework.aop.framework.CglibAopProxy]
==> Unable to proxy interface-implementing method [public final void org.springframework.dao.support.DaoSupport.afterPropertiesSet() throws java.lang.IllegalArgumentException,org.springframework.beans.factory.BeanInitializationException] because it is marked as final: Consider using interface-based JDK proxies instead!

[WARN] [2018-08-10 15:40:15.058]-[main] [org.springframework.aop.framework.CglibAopProxy]
==> Unable to proxy interface-implementing method [public final void org.springframework.dao.support.DaoSupport.afterPropertiesSet() throws java.lang.IllegalArgumentException,org.springframework.beans.factory.BeanInitializationException] because it is marked as final: Consider using interface-based JDK proxies instead!

[WARN] [2018-08-10 15:40:15.103]-[main] [org.springframework.aop.framework.CglibAopProxy]
==> Unable to proxy interface-implementing method [public final void org.springframework.dao.support.DaoSupport.afterPropertiesSet() throws java.lang.IllegalArgumentException,org.springframework.beans.factory.BeanInitializationException] because it is marked as final: Consider using interface-based JDK proxies instead!

[WARN] [2018-08-10 15:40:15.147]-[main] [org.springframework.aop.framework.CglibAopProxy]
==> Unable to proxy interface-implementing method [public final void org.springframework.dao.support.DaoSupport.afterPropertiesSet() throws java.lang.IllegalArgumentException,org.springframework.beans.factory.BeanInitializationException] because it is marked as final: Consider using interface-based JDK proxies instead!

[WARN] [2018-08-10 15:40:15.189]-[main] [org.springframework.aop.framework.CglibAopProxy]
==> Unable to proxy interface-implementing method [public final void org.springframework.dao.support.DaoSupport.afterPropertiesSet() throws java.lang.IllegalArgumentException,org.springframework.beans.factory.BeanInitializationException] because it is marked as final: Consider using interface-based JDK proxies instead!

[INFO] [2018-08-10 15:40:16.586]-[main] [springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping]
==> Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]

[DEBUG] [2018-08-10 15:40:16.895]-[main] [org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver]
==> Cannot find javax.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.

[DEBUG] [2018-08-10 15:40:16.912]-[main] [org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver]
==> Cannot find javax.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.

[DEBUG] [2018-08-10 15:40:16.912]-[main] [org.hibernate.validator.internal.engine.ConfigurationImpl]
==> Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator

[DEBUG] [2018-08-10 15:40:16.912]-[main] [org.hibernate.validator.internal.engine.ConfigurationImpl]
==> Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory

[DEBUG] [2018-08-10 15:40:16.912]-[main] [org.hibernate.validator.internal.engine.ConfigurationImpl]
==> Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy35

[DEBUG] [2018-08-10 15:40:16.912]-[main] [org.hibernate.validator.internal.xml.ValidationXmlParser]
==> Trying to load META-INF/validation.xml for XML based Validator configuration.

[DEBUG] [2018-08-10 15:40:16.913]-[main] [org.hibernate.validator.internal.xml.ResourceLoaderHelper]
==> Trying to load META-INF/validation.xml via user class loader

[DEBUG] [2018-08-10 15:40:16.913]-[main] [org.hibernate.validator.internal.xml.ResourceLoaderHelper]
==> Trying to load META-INF/validation.xml via TCCL

[DEBUG] [2018-08-10 15:40:16.913]-[main] [org.hibernate.validator.internal.xml.ResourceLoaderHelper]
==> Trying to load META-INF/validation.xml via Hibernate Validator's class loader

[DEBUG] [2018-08-10 15:40:16.914]-[main] [org.hibernate.validator.internal.xml.ValidationXmlParser]
==> No META-INF/validation.xml found. Using annotation based configuration only.

[WARN] [2018-08-10 15:40:18.754]-[main] [org.springframework.cloud.netflix.archaius.ArchaiusAutoConfiguration]
==> No spring.application.name found, defaulting to 'application'

[WARN] [2018-08-10 15:40:18.758]-[main] [com.netflix.config.sources.URLConfigurationSource]
==> No URLs will be polled as dynamic configuration sources.

[INFO] [2018-08-10 15:40:18.758]-[main] [com.netflix.config.sources.URLConfigurationSource]
==> To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.

[WARN] [2018-08-10 15:40:18.762]-[main] [com.netflix.config.sources.URLConfigurationSource]
==> No URLs will be polled as dynamic configuration sources.

[INFO] [2018-08-10 15:40:18.763]-[main] [com.netflix.config.sources.URLConfigurationSource]
==> To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.

[DEBUG] [2018-08-10 15:40:19.508]-[main] [org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver]
==> Cannot find javax.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.

[DEBUG] [2018-08-10 15:40:19.510]-[main] [org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver]
==> Cannot find javax.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.

[DEBUG] [2018-08-10 15:40:19.510]-[main] [org.hibernate.validator.internal.engine.ConfigurationImpl]
==> Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator

[DEBUG] [2018-08-10 15:40:19.510]-[main] [org.hibernate.validator.internal.engine.ConfigurationImpl]
==> Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory

[DEBUG] [2018-08-10 15:40:19.510]-[main] [org.hibernate.validator.internal.engine.ConfigurationImpl]
==> Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy35

[DEBUG] [2018-08-10 15:40:19.511]-[main] [org.hibernate.validator.internal.xml.ValidationXmlParser]
==> Trying to load META-INF/validation.xml for XML based Validator configuration.

[DEBUG] [2018-08-10 15:40:19.511]-[main] [org.hibernate.validator.internal.xml.ResourceLoaderHelper]
==> Trying to load META-INF/validation.xml via user class loader

[DEBUG] [2018-08-10 15:40:19.511]-[main] [org.hibernate.validator.internal.xml.ResourceLoaderHelper]
==> Trying to load META-INF/validation.xml via TCCL

[DEBUG] [2018-08-10 15:40:19.511]-[main] [org.hibernate.validator.internal.xml.ResourceLoaderHelper]
==> Trying to load META-INF/validation.xml via Hibernate Validator's class loader

[DEBUG] [2018-08-10 15:40:19.512]-[main] [org.hibernate.validator.internal.xml.ValidationXmlParser]
==> No META-INF/validation.xml found. Using annotation based configuration only.

[INFO] [2018-08-10 15:40:19.528]-[main] [springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper]
==> Context refreshed

[INFO] [2018-08-10 15:40:19.547]-[main] [springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper]
==> Found 1 custom documentation plugin(s)

[INFO] [2018-08-10 15:40:19.582]-[main] [springfox.documentation.spring.web.scanners.ApiListingReferenceScanner]
==> Scanning for api listing references

[INFO] [2018-08-10 15:40:19.929]-[main] [org.apache.coyote.http11.Http11NioProtocol]
==> Starting ProtocolHandler ["http-nio-10120"]

[INFO] [2018-08-10 15:40:19.935]-[main] [org.apache.tomcat.util.net.NioSelectorPool]
==> Using a shared selector for servlet write/read

[INFO] [2018-08-10 15:40:19.959]-[main] [com.dreawer.appxauth.AppxAuthApplication]
==> Started AppxAuthApplication in 10.989 seconds (JVM running for 12.154)

[INFO] [2018-08-10 15:40:25.492]-[http-nio-10120-exec-3] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]]
==> Initializing Spring FrameworkServlet 'dispatcherServlet'

[DEBUG] [2018-08-10 15:40:25.574]-[http-nio-10120-exec-3] [org.hibernate.validator.internal.metadata.descriptor.ConstraintDescriptorImpl]
==> Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.NotNull, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=FIELD, definedOn=DEFINED_LOCALLY, groups=[interface javax.validation.groups.Default], attributes={message={javax.validation.constraints.NotNull.message}, payload=[Ljava.lang.Class;@3cf9b821, groups=[Ljava.lang.Class;@b83f5ae}, constraintType=GENERIC}.

[DEBUG] [2018-08-10 15:40:25.575]-[http-nio-10120-exec-3] [org.hibernate.validator.internal.metadata.descriptor.ConstraintDescriptorImpl]
==> Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.Size, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=FIELD, definedOn=DEFINED_LOCALLY, groups=[interface javax.validation.groups.Default], attributes={groups=[Ljava.lang.Class;@708c2b3c, min=1, message={javax.validation.constraints.Size.message}, payload=[Ljava.lang.Class;@7415a803, max=2147483647}, constraintType=GENERIC}.

[INFO] [2018-08-10 15:40:25.682]-[http-nio-10120-exec-3] [com.alibaba.druid.pool.DruidDataSource]
==> {dataSource-1} inited

[INFO] [2018-08-10 19:38:57.621]-[Thread-28] [com.alibaba.druid.pool.DruidDataSource]
==> {dataSource-1} closed
